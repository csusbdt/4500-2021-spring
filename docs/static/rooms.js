import{get_spritesheet}from"/4500-2021-spring/static/spritesheets.js";import{load_script,insert,remove}from"/4500-2021-spring/static/utils.js";import{set_room,set_bg}from"/4500-2021-spring/static/core.js";import{c_zone}from"/4500-2021-spring/static/zone.js";import{c_sound}from"/4500-2021-spring/static/c_sound.js";import{c_goto}from"/4500-2021-spring/static/goto.js";import{c_once}from"/4500-2021-spring/static/c_once.js";export function c_room(t){this.name=t,this.on_start=null,this.spritesheets=new Array,this.sounds=new Array,this.zones=new Array,this.updatables=new Array,this.drawables=new Array,this.touched=!1,this.touch_x=0,this.touch_y=0}export const rooms=new Map;const start_room=new c_room("");start_room.on_start=()=>{},rooms.set("",start_room);export function get_room(t){let o=rooms.get(t);return void 0===o?(o=new c_room(t),rooms.set(t,o),load_script(`/4500-2021-spring/dynamic/r_${t}.js`).then((()=>Promise.all(o.spritesheets.map((t=>t.load())),o.sounds.map((t=>t.fetch()))))).then((()=>o))):Promise.resolve(o)}c_room.prototype.goto=function(t){return new c_goto(this,t)},c_room.prototype.zone=function(t){return new c_zone(this,t)},c_room.prototype.sound=function(t,o){const s=new c_sound(t,o);return this.sounds.push(s),s},c_room.prototype.spritesheet=function(t){const o=get_spritesheet(t);return this.spritesheets.push(o),o},c_room.prototype.once=function(t,...o){const s=new c_once(this);return o.forEach((o=>s.add(t.frame(o)))),s},c_room.prototype.bg=function(t){set_bg(t)},c_room.prototype.insert_updatable=function(t){this.updatables.push(t)},c_room.prototype.insert_drawable=function(t){insert(this.drawables,t)},c_room.prototype.remove_updatable=function(t){remove(this.updatables,t)},c_room.prototype.remove_drawable=function(t){remove(this.drawables,t)},c_room.prototype.on_touch=function([t,o]){this.touch_x=t,this.touch_y=o,this.touched=!0},c_room.prototype.start=function(){set_room(this),null!==this.on_start&&this.on_start()},c_room.prototype.stop=function(){set_bg(null),set_room(null),this.drawables.length=0,this.updatables.length=0,this.zones.length=0,this.sounds.forEach((t=>t.release_memory()))},c_room.prototype.render=function(t,o){for(let t of this.drawables)t.draw(o);if(this.touched){for(let t of this.zones)if(t.contains(this.touch_x,this.touch_y)){t.touch();break}this.touched=!1}let s=Array.from(this.updatables);for(let o of s)o.update(t);s=null};